//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LamedNetLite.biz.pelecard.ws101 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TrxWsSoap", Namespace="https://ws101.pelecard.biz/")]
    public partial class TrxWs : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DebitRegularTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebitRegularTypeEmvOperationCompleted;
        
        private System.Threading.SendOrPostCallback DRTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebitPaymntsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebitPaymntsTypeEmvOperationCompleted;
        
        private System.Threading.SendOrPostCallback DPTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebitCreditTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebitCreditTypeEmvOperationCompleted;
        
        private System.Threading.SendOrPostCallback DCTOperationCompleted;
        
        private System.Threading.SendOrPostCallback DebitIsracreditTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthrizeCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthrizeCreditCardEmvOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShvIntr99OperationCompleted;
        
        private System.Threading.SendOrPostCallback ShvIntr99TOperationCompleted;
        
        private System.Threading.SendOrPostCallback SI99OperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertToCcOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSapakNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRetNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRetNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthrizeCreditTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthrizeCreditTypeEmvOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthrizePaymntsTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthrizePaymntsTypeEmvOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelIshurOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditPayPalPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDebitTrxReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCoPhonNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkParmXExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkGoodParmXOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChkGoodParmX2OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBroadcastNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback TrxLookUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback SystemInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatisRecOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransDataEOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckAshVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback BroadcastOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTranOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTran2OperationCompleted;
        
        private System.Threading.SendOrPostCallback DelTran3OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLastBroadcastDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendBroadcastDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TrxWs() {
            this.Url = global::LamedNetLite.Properties.Settings.Default.LamedNetLite_biz_pelecard_ws101_TrxWs;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event DebitRegularTypeCompletedEventHandler DebitRegularTypeCompleted;
        
        /// <remarks/>
        public event DebitRegularTypeEmvCompletedEventHandler DebitRegularTypeEmvCompleted;
        
        /// <remarks/>
        public event DRTCompletedEventHandler DRTCompleted;
        
        /// <remarks/>
        public event DebitPaymntsTypeCompletedEventHandler DebitPaymntsTypeCompleted;
        
        /// <remarks/>
        public event DebitPaymntsTypeEmvCompletedEventHandler DebitPaymntsTypeEmvCompleted;
        
        /// <remarks/>
        public event DPTCompletedEventHandler DPTCompleted;
        
        /// <remarks/>
        public event DebitCreditTypeCompletedEventHandler DebitCreditTypeCompleted;
        
        /// <remarks/>
        public event DebitCreditTypeEmvCompletedEventHandler DebitCreditTypeEmvCompleted;
        
        /// <remarks/>
        public event DCTCompletedEventHandler DCTCompleted;
        
        /// <remarks/>
        public event DebitIsracreditTypeCompletedEventHandler DebitIsracreditTypeCompleted;
        
        /// <remarks/>
        public event AuthrizeCreditCardCompletedEventHandler AuthrizeCreditCardCompleted;
        
        /// <remarks/>
        public event AuthrizeCreditCardEmvCompletedEventHandler AuthrizeCreditCardEmvCompleted;
        
        /// <remarks/>
        public event ShvIntr99CompletedEventHandler ShvIntr99Completed;
        
        /// <remarks/>
        public event ShvIntr99TCompletedEventHandler ShvIntr99TCompleted;
        
        /// <remarks/>
        public event SI99CompletedEventHandler SI99Completed;
        
        /// <remarks/>
        public event ConvertToTokenCompletedEventHandler ConvertToTokenCompleted;
        
        /// <remarks/>
        public event ConvertToCcCompletedEventHandler ConvertToCcCompleted;
        
        /// <remarks/>
        public event UpdateTokenCompletedEventHandler UpdateTokenCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetSapakNoCompletedEventHandler GetSapakNoCompleted;
        
        /// <remarks/>
        public event GetRetNumCompletedEventHandler GetRetNumCompleted;
        
        /// <remarks/>
        public event GetRetNameCompletedEventHandler GetRetNameCompleted;
        
        /// <remarks/>
        public event AuthrizeCreditTypeCompletedEventHandler AuthrizeCreditTypeCompleted;
        
        /// <remarks/>
        public event AuthrizeCreditTypeEmvCompletedEventHandler AuthrizeCreditTypeEmvCompleted;
        
        /// <remarks/>
        public event AuthrizePaymntsTypeCompletedEventHandler AuthrizePaymntsTypeCompleted;
        
        /// <remarks/>
        public event AuthrizePaymntsTypeEmvCompletedEventHandler AuthrizePaymntsTypeEmvCompleted;
        
        /// <remarks/>
        public event DelIshurCompletedEventHandler DelIshurCompleted;
        
        /// <remarks/>
        public event AuditPayPalPaymentCompletedEventHandler AuditPayPalPaymentCompleted;
        
        /// <remarks/>
        public event RetrieveTokenCompletedEventHandler RetrieveTokenCompleted;
        
        /// <remarks/>
        public event AddDebitTrxReceiptCompletedEventHandler AddDebitTrxReceiptCompleted;
        
        /// <remarks/>
        public event GetCoPhonNoCompletedEventHandler GetCoPhonNoCompleted;
        
        /// <remarks/>
        public event ChkParmXExistCompletedEventHandler ChkParmXExistCompleted;
        
        /// <remarks/>
        public event ChkGoodParmXCompletedEventHandler ChkGoodParmXCompleted;
        
        /// <remarks/>
        public event CreateInvoiceCompletedEventHandler CreateInvoiceCompleted;
        
        /// <remarks/>
        public event ChkGoodParmX2CompletedEventHandler ChkGoodParmX2Completed;
        
        /// <remarks/>
        public event CheckErrorCompletedEventHandler CheckErrorCompleted;
        
        /// <remarks/>
        public event GetBroadcastNumCompletedEventHandler GetBroadcastNumCompleted;
        
        /// <remarks/>
        public event CheckCreditCardCompletedEventHandler CheckCreditCardCompleted;
        
        /// <remarks/>
        public event TrxLookUpCompletedEventHandler TrxLookUpCompleted;
        
        /// <remarks/>
        public event SystemInfoCompletedEventHandler SystemInfoCompleted;
        
        /// <remarks/>
        public event GetStatisRecCompletedEventHandler GetStatisRecCompleted;
        
        /// <remarks/>
        public event GetCardNameCompletedEventHandler GetCardNameCompleted;
        
        /// <remarks/>
        public event GetTransDataCompletedEventHandler GetTransDataCompleted;
        
        /// <remarks/>
        public event GetTransDataECompletedEventHandler GetTransDataECompleted;
        
        /// <remarks/>
        public event CheckAshVersionCompletedEventHandler CheckAshVersionCompleted;
        
        /// <remarks/>
        public event BroadcastCompletedEventHandler BroadcastCompleted;
        
        /// <remarks/>
        public event DelTranCompletedEventHandler DelTranCompleted;
        
        /// <remarks/>
        public event DelTran2CompletedEventHandler DelTran2Completed;
        
        /// <remarks/>
        public event DelTran3CompletedEventHandler DelTran3Completed;
        
        /// <remarks/>
        public event SendLastBroadcastDataCompletedEventHandler SendLastBroadcastDataCompleted;
        
        /// <remarks/>
        public event SendBroadcastDataCompletedEventHandler SendBroadcastDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitRegularType", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DebitRegularType(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx) {
            object[] results = this.Invoke("DebitRegularType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DebitRegularTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx) {
            this.DebitRegularTypeAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, cvv2, id, authNum, parmx, null);
        }
        
        /// <remarks/>
        public void DebitRegularTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx, object userState) {
            if ((this.DebitRegularTypeOperationCompleted == null)) {
                this.DebitRegularTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitRegularTypeOperationCompleted);
            }
            this.InvokeAsync("DebitRegularType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx}, this.DebitRegularTypeOperationCompleted, userState);
        }
        
        private void OnDebitRegularTypeOperationCompleted(object arg) {
            if ((this.DebitRegularTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitRegularTypeCompleted(this, new DebitRegularTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitRegularTypeEmv", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputObject DebitRegularTypeEmv(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx, string createToken, string lang) {
            object[] results = this.Invoke("DebitRegularTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx,
                        createToken,
                        lang});
            return ((OutputObject)(results[0]));
        }
        
        /// <remarks/>
        public void DebitRegularTypeEmvAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx, string createToken, string lang) {
            this.DebitRegularTypeEmvAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, cvv2, id, authNum, parmx, createToken, lang, null);
        }
        
        /// <remarks/>
        public void DebitRegularTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmx, 
                    string createToken, 
                    string lang, 
                    object userState) {
            if ((this.DebitRegularTypeEmvOperationCompleted == null)) {
                this.DebitRegularTypeEmvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitRegularTypeEmvOperationCompleted);
            }
            this.InvokeAsync("DebitRegularTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx,
                        createToken,
                        lang}, this.DebitRegularTypeEmvOperationCompleted, userState);
        }
        
        private void OnDebitRegularTypeEmvOperationCompleted(object arg) {
            if ((this.DebitRegularTypeEmvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitRegularTypeEmvCompleted(this, new DebitRegularTypeEmvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DRT", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DRT(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx) {
            object[] results = this.Invoke("DRT", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DRTAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx) {
            this.DRTAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, cvv2, id, authNum, parmx, null);
        }
        
        /// <remarks/>
        public void DRTAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx, object userState) {
            if ((this.DRTOperationCompleted == null)) {
                this.DRTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDRTOperationCompleted);
            }
            this.InvokeAsync("DRT", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx}, this.DRTOperationCompleted, userState);
        }
        
        private void OnDRTOperationCompleted(object arg) {
            if ((this.DRTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DRTCompleted(this, new DRTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitPaymntsType", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DebitPaymntsType(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string authNum, string parmx) {
            object[] results = this.Invoke("DebitPaymntsType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        authNum,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DebitPaymntsTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string authNum, string parmx) {
            this.DebitPaymntsTypeAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, firstPymnt, cvv2, id, authNum, parmx, null);
        }
        
        /// <remarks/>
        public void DebitPaymntsTypeAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmx, 
                    object userState) {
            if ((this.DebitPaymntsTypeOperationCompleted == null)) {
                this.DebitPaymntsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitPaymntsTypeOperationCompleted);
            }
            this.InvokeAsync("DebitPaymntsType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        authNum,
                        parmx}, this.DebitPaymntsTypeOperationCompleted, userState);
        }
        
        private void OnDebitPaymntsTypeOperationCompleted(object arg) {
            if ((this.DebitPaymntsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitPaymntsTypeCompleted(this, new DebitPaymntsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitPaymntsTypeEmv", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputObject DebitPaymntsTypeEmv(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmx, 
                    string createToken, 
                    string lang) {
            object[] results = this.Invoke("DebitPaymntsTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        authNum,
                        parmx,
                        createToken,
                        lang});
            return ((OutputObject)(results[0]));
        }
        
        /// <remarks/>
        public void DebitPaymntsTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmx, 
                    string createToken, 
                    string lang) {
            this.DebitPaymntsTypeEmvAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, firstPymnt, cvv2, id, authNum, parmx, createToken, lang, null);
        }
        
        /// <remarks/>
        public void DebitPaymntsTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmx, 
                    string createToken, 
                    string lang, 
                    object userState) {
            if ((this.DebitPaymntsTypeEmvOperationCompleted == null)) {
                this.DebitPaymntsTypeEmvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitPaymntsTypeEmvOperationCompleted);
            }
            this.InvokeAsync("DebitPaymntsTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        authNum,
                        parmx,
                        createToken,
                        lang}, this.DebitPaymntsTypeEmvOperationCompleted, userState);
        }
        
        private void OnDebitPaymntsTypeEmvOperationCompleted(object arg) {
            if ((this.DebitPaymntsTypeEmvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitPaymntsTypeEmvCompleted(this, new DebitPaymntsTypeEmvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DPT", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DPT(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string authNum, string parmx) {
            object[] results = this.Invoke("DPT", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        authNum,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DPTAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string authNum, string parmx) {
            this.DPTAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, firstPymnt, cvv2, id, authNum, parmx, null);
        }
        
        /// <remarks/>
        public void DPTAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmx, 
                    object userState) {
            if ((this.DPTOperationCompleted == null)) {
                this.DPTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDPTOperationCompleted);
            }
            this.InvokeAsync("DPT", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        authNum,
                        parmx}, this.DPTOperationCompleted, userState);
        }
        
        private void OnDPTOperationCompleted(object arg) {
            if ((this.DPTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DPTCompleted(this, new DPTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitCreditType", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DebitCreditType(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string authNum, string parmX) {
            object[] results = this.Invoke("DebitCreditType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        authNum,
                        parmX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DebitCreditTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string authNum, string parmX) {
            this.DebitCreditTypeAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, cvv2, id, authNum, parmX, null);
        }
        
        /// <remarks/>
        public void DebitCreditTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string authNum, string parmX, object userState) {
            if ((this.DebitCreditTypeOperationCompleted == null)) {
                this.DebitCreditTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitCreditTypeOperationCompleted);
            }
            this.InvokeAsync("DebitCreditType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        authNum,
                        parmX}, this.DebitCreditTypeOperationCompleted, userState);
        }
        
        private void OnDebitCreditTypeOperationCompleted(object arg) {
            if ((this.DebitCreditTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitCreditTypeCompleted(this, new DebitCreditTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitCreditTypeEmv", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputObject DebitCreditTypeEmv(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmX, 
                    string createToken, 
                    string lang) {
            object[] results = this.Invoke("DebitCreditTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        authNum,
                        parmX,
                        createToken,
                        lang});
            return ((OutputObject)(results[0]));
        }
        
        /// <remarks/>
        public void DebitCreditTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmX, 
                    string createToken, 
                    string lang) {
            this.DebitCreditTypeEmvAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, cvv2, id, authNum, parmX, createToken, lang, null);
        }
        
        /// <remarks/>
        public void DebitCreditTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string shopNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string cvv2, 
                    string id, 
                    string authNum, 
                    string parmX, 
                    string createToken, 
                    string lang, 
                    object userState) {
            if ((this.DebitCreditTypeEmvOperationCompleted == null)) {
                this.DebitCreditTypeEmvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitCreditTypeEmvOperationCompleted);
            }
            this.InvokeAsync("DebitCreditTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        authNum,
                        parmX,
                        createToken,
                        lang}, this.DebitCreditTypeEmvOperationCompleted, userState);
        }
        
        private void OnDebitCreditTypeEmvOperationCompleted(object arg) {
            if ((this.DebitCreditTypeEmvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitCreditTypeEmvCompleted(this, new DebitCreditTypeEmvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DCT", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DCT(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string authNum, string parmX) {
            object[] results = this.Invoke("DCT", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        authNum,
                        parmX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DCTAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string authNum, string parmX) {
            this.DCTAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, cvv2, id, authNum, parmX, null);
        }
        
        /// <remarks/>
        public void DCTAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string authNum, string parmX, object userState) {
            if ((this.DCTOperationCompleted == null)) {
                this.DCTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDCTOperationCompleted);
            }
            this.InvokeAsync("DCT", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        authNum,
                        parmX}, this.DCTOperationCompleted, userState);
        }
        
        private void OnDCTOperationCompleted(object arg) {
            if ((this.DCTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DCTCompleted(this, new DCTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DebitIsracreditType", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DebitIsracreditType(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx) {
            object[] results = this.Invoke("DebitIsracreditType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DebitIsracreditTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx) {
            this.DebitIsracreditTypeAsync(userName, password, termNo, shopNo, creditCard, creditCardDateMmyy, token, total, currency, cvv2, id, authNum, parmx, null);
        }
        
        /// <remarks/>
        public void DebitIsracreditTypeAsync(string userName, string password, string termNo, string shopNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string authNum, string parmx, object userState) {
            if ((this.DebitIsracreditTypeOperationCompleted == null)) {
                this.DebitIsracreditTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebitIsracreditTypeOperationCompleted);
            }
            this.InvokeAsync("DebitIsracreditType", new object[] {
                        userName,
                        password,
                        termNo,
                        shopNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        authNum,
                        parmx}, this.DebitIsracreditTypeOperationCompleted, userState);
        }
        
        private void OnDebitIsracreditTypeOperationCompleted(object arg) {
            if ((this.DebitIsracreditTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebitIsracreditTypeCompleted(this, new DebitIsracreditTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuthrizeCreditCard", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthrizeCreditCard(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string parmX) {
            object[] results = this.Invoke("AuthrizeCreditCard", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        parmX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthrizeCreditCardAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string parmX) {
            this.AuthrizeCreditCardAsync(userName, password, termNo, creditCard, creditCardDateMmyy, token, total, currency, cvv2, id, parmX, null);
        }
        
        /// <remarks/>
        public void AuthrizeCreditCardAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string parmX, object userState) {
            if ((this.AuthrizeCreditCardOperationCompleted == null)) {
                this.AuthrizeCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthrizeCreditCardOperationCompleted);
            }
            this.InvokeAsync("AuthrizeCreditCard", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        parmX}, this.AuthrizeCreditCardOperationCompleted, userState);
        }
        
        private void OnAuthrizeCreditCardOperationCompleted(object arg) {
            if ((this.AuthrizeCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthrizeCreditCardCompleted(this, new AuthrizeCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuthrizeCreditCardEmv", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputObject AuthrizeCreditCardEmv(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string parmX, string shopNo, string createToken, string lang) {
            object[] results = this.Invoke("AuthrizeCreditCardEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        parmX,
                        shopNo,
                        createToken,
                        lang});
            return ((OutputObject)(results[0]));
        }
        
        /// <remarks/>
        public void AuthrizeCreditCardEmvAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string parmX, string shopNo, string createToken, string lang) {
            this.AuthrizeCreditCardEmvAsync(userName, password, termNo, creditCard, creditCardDateMmyy, token, total, currency, cvv2, id, parmX, shopNo, createToken, lang, null);
        }
        
        /// <remarks/>
        public void AuthrizeCreditCardEmvAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string cvv2, string id, string parmX, string shopNo, string createToken, string lang, object userState) {
            if ((this.AuthrizeCreditCardEmvOperationCompleted == null)) {
                this.AuthrizeCreditCardEmvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthrizeCreditCardEmvOperationCompleted);
            }
            this.InvokeAsync("AuthrizeCreditCardEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        cvv2,
                        id,
                        parmX,
                        shopNo,
                        createToken,
                        lang}, this.AuthrizeCreditCardEmvOperationCompleted, userState);
        }
        
        private void OnAuthrizeCreditCardEmvOperationCompleted(object arg) {
            if ((this.AuthrizeCreditCardEmvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthrizeCreditCardEmvCompleted(this, new AuthrizeCreditCardEmvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ShvIntr99", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShvIntr99(string userName, string password, string termNo, string intIn) {
            object[] results = this.Invoke("ShvIntr99", new object[] {
                        userName,
                        password,
                        termNo,
                        intIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShvIntr99Async(string userName, string password, string termNo, string intIn) {
            this.ShvIntr99Async(userName, password, termNo, intIn, null);
        }
        
        /// <remarks/>
        public void ShvIntr99Async(string userName, string password, string termNo, string intIn, object userState) {
            if ((this.ShvIntr99OperationCompleted == null)) {
                this.ShvIntr99OperationCompleted = new System.Threading.SendOrPostCallback(this.OnShvIntr99OperationCompleted);
            }
            this.InvokeAsync("ShvIntr99", new object[] {
                        userName,
                        password,
                        termNo,
                        intIn}, this.ShvIntr99OperationCompleted, userState);
        }
        
        private void OnShvIntr99OperationCompleted(object arg) {
            if ((this.ShvIntr99Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShvIntr99Completed(this, new ShvIntr99CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ShvIntr99T", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShvIntr99T(string userName, string password, string termNo, string intIn, string token) {
            object[] results = this.Invoke("ShvIntr99T", new object[] {
                        userName,
                        password,
                        termNo,
                        intIn,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShvIntr99TAsync(string userName, string password, string termNo, string intIn, string token) {
            this.ShvIntr99TAsync(userName, password, termNo, intIn, token, null);
        }
        
        /// <remarks/>
        public void ShvIntr99TAsync(string userName, string password, string termNo, string intIn, string token, object userState) {
            if ((this.ShvIntr99TOperationCompleted == null)) {
                this.ShvIntr99TOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShvIntr99TOperationCompleted);
            }
            this.InvokeAsync("ShvIntr99T", new object[] {
                        userName,
                        password,
                        termNo,
                        intIn,
                        token}, this.ShvIntr99TOperationCompleted, userState);
        }
        
        private void OnShvIntr99TOperationCompleted(object arg) {
            if ((this.ShvIntr99TCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShvIntr99TCompleted(this, new ShvIntr99TCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/SI99", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SI99(string userName, string password, string termNo, string intIn) {
            object[] results = this.Invoke("SI99", new object[] {
                        userName,
                        password,
                        termNo,
                        intIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SI99Async(string userName, string password, string termNo, string intIn) {
            this.SI99Async(userName, password, termNo, intIn, null);
        }
        
        /// <remarks/>
        public void SI99Async(string userName, string password, string termNo, string intIn, object userState) {
            if ((this.SI99OperationCompleted == null)) {
                this.SI99OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSI99OperationCompleted);
            }
            this.InvokeAsync("SI99", new object[] {
                        userName,
                        password,
                        termNo,
                        intIn}, this.SI99OperationCompleted, userState);
        }
        
        private void OnSI99OperationCompleted(object arg) {
            if ((this.SI99Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SI99Completed(this, new SI99CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ConvertToToken", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertToToken(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy) {
            object[] results = this.Invoke("ConvertToToken", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToTokenAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy) {
            this.ConvertToTokenAsync(userName, password, termNo, creditCard, creditCardDateMmyy, null);
        }
        
        /// <remarks/>
        public void ConvertToTokenAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, object userState) {
            if ((this.ConvertToTokenOperationCompleted == null)) {
                this.ConvertToTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToTokenOperationCompleted);
            }
            this.InvokeAsync("ConvertToToken", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy}, this.ConvertToTokenOperationCompleted, userState);
        }
        
        private void OnConvertToTokenOperationCompleted(object arg) {
            if ((this.ConvertToTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToTokenCompleted(this, new ConvertToTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ConvertToCc", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertToCc(string userName, string password, string termNo, string token) {
            object[] results = this.Invoke("ConvertToCc", new object[] {
                        userName,
                        password,
                        termNo,
                        token});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertToCcAsync(string userName, string password, string termNo, string token) {
            this.ConvertToCcAsync(userName, password, termNo, token, null);
        }
        
        /// <remarks/>
        public void ConvertToCcAsync(string userName, string password, string termNo, string token, object userState) {
            if ((this.ConvertToCcOperationCompleted == null)) {
                this.ConvertToCcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertToCcOperationCompleted);
            }
            this.InvokeAsync("ConvertToCc", new object[] {
                        userName,
                        password,
                        termNo,
                        token}, this.ConvertToCcOperationCompleted, userState);
        }
        
        private void OnConvertToCcOperationCompleted(object arg) {
            if ((this.ConvertToCcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertToCcCompleted(this, new ConvertToCcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/UpdateToken", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateToken(string userName, string password, string termNo, string token, string creditCard, string creditCardExpDate) {
            object[] results = this.Invoke("UpdateToken", new object[] {
                        userName,
                        password,
                        termNo,
                        token,
                        creditCard,
                        creditCardExpDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTokenAsync(string userName, string password, string termNo, string token, string creditCard, string creditCardExpDate) {
            this.UpdateTokenAsync(userName, password, termNo, token, creditCard, creditCardExpDate, null);
        }
        
        /// <remarks/>
        public void UpdateTokenAsync(string userName, string password, string termNo, string token, string creditCard, string creditCardExpDate, object userState) {
            if ((this.UpdateTokenOperationCompleted == null)) {
                this.UpdateTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTokenOperationCompleted);
            }
            this.InvokeAsync("UpdateToken", new object[] {
                        userName,
                        password,
                        termNo,
                        token,
                        creditCard,
                        creditCardExpDate}, this.UpdateTokenOperationCompleted, userState);
        }
        
        private void OnUpdateTokenOperationCompleted(object arg) {
            if ((this.UpdateTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTokenCompleted(this, new UpdateTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ChangePassword", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(string userName, string password) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userName, string password) {
            this.ChangePasswordAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string userName, string password, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        userName,
                        password}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetSapakNo", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSapakNo(string userName, string password, string termNo, string creditCoCode) {
            object[] results = this.Invoke("GetSapakNo", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCoCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSapakNoAsync(string userName, string password, string termNo, string creditCoCode) {
            this.GetSapakNoAsync(userName, password, termNo, creditCoCode, null);
        }
        
        /// <remarks/>
        public void GetSapakNoAsync(string userName, string password, string termNo, string creditCoCode, object userState) {
            if ((this.GetSapakNoOperationCompleted == null)) {
                this.GetSapakNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSapakNoOperationCompleted);
            }
            this.InvokeAsync("GetSapakNo", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCoCode}, this.GetSapakNoOperationCompleted, userState);
        }
        
        private void OnGetSapakNoOperationCompleted(object arg) {
            if ((this.GetSapakNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSapakNoCompleted(this, new GetSapakNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetRetNum", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRetNum(string userName, string password, string termNo) {
            object[] results = this.Invoke("GetRetNum", new object[] {
                        userName,
                        password,
                        termNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRetNumAsync(string userName, string password, string termNo) {
            this.GetRetNumAsync(userName, password, termNo, null);
        }
        
        /// <remarks/>
        public void GetRetNumAsync(string userName, string password, string termNo, object userState) {
            if ((this.GetRetNumOperationCompleted == null)) {
                this.GetRetNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRetNumOperationCompleted);
            }
            this.InvokeAsync("GetRetNum", new object[] {
                        userName,
                        password,
                        termNo}, this.GetRetNumOperationCompleted, userState);
        }
        
        private void OnGetRetNumOperationCompleted(object arg) {
            if ((this.GetRetNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRetNumCompleted(this, new GetRetNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetRetName", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRetName(string userName, string password, string termNo) {
            object[] results = this.Invoke("GetRetName", new object[] {
                        userName,
                        password,
                        termNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRetNameAsync(string userName, string password, string termNo) {
            this.GetRetNameAsync(userName, password, termNo, null);
        }
        
        /// <remarks/>
        public void GetRetNameAsync(string userName, string password, string termNo, object userState) {
            if ((this.GetRetNameOperationCompleted == null)) {
                this.GetRetNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRetNameOperationCompleted);
            }
            this.InvokeAsync("GetRetName", new object[] {
                        userName,
                        password,
                        termNo}, this.GetRetNameOperationCompleted, userState);
        }
        
        private void OnGetRetNameOperationCompleted(object arg) {
            if ((this.GetRetNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRetNameCompleted(this, new GetRetNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuthrizeCreditType", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthrizeCreditType(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string parmx) {
            object[] results = this.Invoke("AuthrizeCreditType", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthrizeCreditTypeAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string parmx) {
            this.AuthrizeCreditTypeAsync(userName, password, termNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, cvv2, id, parmx, null);
        }
        
        /// <remarks/>
        public void AuthrizeCreditTypeAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string parmx, object userState) {
            if ((this.AuthrizeCreditTypeOperationCompleted == null)) {
                this.AuthrizeCreditTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthrizeCreditTypeOperationCompleted);
            }
            this.InvokeAsync("AuthrizeCreditType", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        parmx}, this.AuthrizeCreditTypeOperationCompleted, userState);
        }
        
        private void OnAuthrizeCreditTypeOperationCompleted(object arg) {
            if ((this.AuthrizeCreditTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthrizeCreditTypeCompleted(this, new AuthrizeCreditTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuthrizeCreditTypeEmv", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputObject AuthrizeCreditTypeEmv(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string parmx, string shopNo, string createToken, string lang) {
            object[] results = this.Invoke("AuthrizeCreditTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        parmx,
                        shopNo,
                        createToken,
                        lang});
            return ((OutputObject)(results[0]));
        }
        
        /// <remarks/>
        public void AuthrizeCreditTypeEmvAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string cvv2, string id, string parmx, string shopNo, string createToken, string lang) {
            this.AuthrizeCreditTypeEmvAsync(userName, password, termNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, cvv2, id, parmx, shopNo, createToken, lang, null);
        }
        
        /// <remarks/>
        public void AuthrizeCreditTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string cvv2, 
                    string id, 
                    string parmx, 
                    string shopNo, 
                    string createToken, 
                    string lang, 
                    object userState) {
            if ((this.AuthrizeCreditTypeEmvOperationCompleted == null)) {
                this.AuthrizeCreditTypeEmvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthrizeCreditTypeEmvOperationCompleted);
            }
            this.InvokeAsync("AuthrizeCreditTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        cvv2,
                        id,
                        parmx,
                        shopNo,
                        createToken,
                        lang}, this.AuthrizeCreditTypeEmvOperationCompleted, userState);
        }
        
        private void OnAuthrizeCreditTypeEmvOperationCompleted(object arg) {
            if ((this.AuthrizeCreditTypeEmvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthrizeCreditTypeEmvCompleted(this, new AuthrizeCreditTypeEmvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuthrizePaymntsType", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthrizePaymntsType(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string parmx) {
            object[] results = this.Invoke("AuthrizePaymntsType", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        parmx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthrizePaymntsTypeAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string parmx) {
            this.AuthrizePaymntsTypeAsync(userName, password, termNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, firstPymnt, cvv2, id, parmx, null);
        }
        
        /// <remarks/>
        public void AuthrizePaymntsTypeAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, string token, string total, string currency, string paymentsNo, string firstPymnt, string cvv2, string id, string parmx, object userState) {
            if ((this.AuthrizePaymntsTypeOperationCompleted == null)) {
                this.AuthrizePaymntsTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthrizePaymntsTypeOperationCompleted);
            }
            this.InvokeAsync("AuthrizePaymntsType", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        parmx}, this.AuthrizePaymntsTypeOperationCompleted, userState);
        }
        
        private void OnAuthrizePaymntsTypeOperationCompleted(object arg) {
            if ((this.AuthrizePaymntsTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthrizePaymntsTypeCompleted(this, new AuthrizePaymntsTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuthrizePaymntsTypeEmv", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OutputObject AuthrizePaymntsTypeEmv(
                    string userName, 
                    string password, 
                    string termNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string parmx, 
                    string shopNo, 
                    string createToken, 
                    string lang) {
            object[] results = this.Invoke("AuthrizePaymntsTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        parmx,
                        shopNo,
                        createToken,
                        lang});
            return ((OutputObject)(results[0]));
        }
        
        /// <remarks/>
        public void AuthrizePaymntsTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string parmx, 
                    string shopNo, 
                    string createToken, 
                    string lang) {
            this.AuthrizePaymntsTypeEmvAsync(userName, password, termNo, creditCard, creditCardDateMmyy, token, total, currency, paymentsNo, firstPymnt, cvv2, id, parmx, shopNo, createToken, lang, null);
        }
        
        /// <remarks/>
        public void AuthrizePaymntsTypeEmvAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string creditCard, 
                    string creditCardDateMmyy, 
                    string token, 
                    string total, 
                    string currency, 
                    string paymentsNo, 
                    string firstPymnt, 
                    string cvv2, 
                    string id, 
                    string parmx, 
                    string shopNo, 
                    string createToken, 
                    string lang, 
                    object userState) {
            if ((this.AuthrizePaymntsTypeEmvOperationCompleted == null)) {
                this.AuthrizePaymntsTypeEmvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthrizePaymntsTypeEmvOperationCompleted);
            }
            this.InvokeAsync("AuthrizePaymntsTypeEmv", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy,
                        token,
                        total,
                        currency,
                        paymentsNo,
                        firstPymnt,
                        cvv2,
                        id,
                        parmx,
                        shopNo,
                        createToken,
                        lang}, this.AuthrizePaymntsTypeEmvOperationCompleted, userState);
        }
        
        private void OnAuthrizePaymntsTypeEmvOperationCompleted(object arg) {
            if ((this.AuthrizePaymntsTypeEmvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthrizePaymntsTypeEmvCompleted(this, new AuthrizePaymntsTypeEmvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DelIshur", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelIshur(string userName, string password, string debitTrxId) {
            object[] results = this.Invoke("DelIshur", new object[] {
                        userName,
                        password,
                        debitTrxId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelIshurAsync(string userName, string password, string debitTrxId) {
            this.DelIshurAsync(userName, password, debitTrxId, null);
        }
        
        /// <remarks/>
        public void DelIshurAsync(string userName, string password, string debitTrxId, object userState) {
            if ((this.DelIshurOperationCompleted == null)) {
                this.DelIshurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelIshurOperationCompleted);
            }
            this.InvokeAsync("DelIshur", new object[] {
                        userName,
                        password,
                        debitTrxId}, this.DelIshurOperationCompleted, userState);
        }
        
        private void OnDelIshurOperationCompleted(object arg) {
            if ((this.DelIshurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelIshurCompleted(this, new DelIshurCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AuditPayPalPayment", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuditPayPalPayment(string userName, string password, string termNo, string paramX, string totalAg, string currency, string result) {
            object[] results = this.Invoke("AuditPayPalPayment", new object[] {
                        userName,
                        password,
                        termNo,
                        paramX,
                        totalAg,
                        currency,
                        result});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuditPayPalPaymentAsync(string userName, string password, string termNo, string paramX, string totalAg, string currency, string result) {
            this.AuditPayPalPaymentAsync(userName, password, termNo, paramX, totalAg, currency, result, null);
        }
        
        /// <remarks/>
        public void AuditPayPalPaymentAsync(string userName, string password, string termNo, string paramX, string totalAg, string currency, string result, object userState) {
            if ((this.AuditPayPalPaymentOperationCompleted == null)) {
                this.AuditPayPalPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditPayPalPaymentOperationCompleted);
            }
            this.InvokeAsync("AuditPayPalPayment", new object[] {
                        userName,
                        password,
                        termNo,
                        paramX,
                        totalAg,
                        currency,
                        result}, this.AuditPayPalPaymentOperationCompleted, userState);
        }
        
        private void OnAuditPayPalPaymentOperationCompleted(object arg) {
            if ((this.AuditPayPalPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditPayPalPaymentCompleted(this, new AuditPayPalPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/RetrieveToken", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveToken(string userName, string password, string termNo, string creditCard) {
            object[] results = this.Invoke("RetrieveToken", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTokenAsync(string userName, string password, string termNo, string creditCard) {
            this.RetrieveTokenAsync(userName, password, termNo, creditCard, null);
        }
        
        /// <remarks/>
        public void RetrieveTokenAsync(string userName, string password, string termNo, string creditCard, object userState) {
            if ((this.RetrieveTokenOperationCompleted == null)) {
                this.RetrieveTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTokenOperationCompleted);
            }
            this.InvokeAsync("RetrieveToken", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard}, this.RetrieveTokenOperationCompleted, userState);
        }
        
        private void OnRetrieveTokenOperationCompleted(object arg) {
            if ((this.RetrieveTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTokenCompleted(this, new RetrieveTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/AddDebitTrxReceipt", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddDebitTrxReceipt(string userName, string password, string termNo, string debitTrxId, string url) {
            object[] results = this.Invoke("AddDebitTrxReceipt", new object[] {
                        userName,
                        password,
                        termNo,
                        debitTrxId,
                        url});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddDebitTrxReceiptAsync(string userName, string password, string termNo, string debitTrxId, string url) {
            this.AddDebitTrxReceiptAsync(userName, password, termNo, debitTrxId, url, null);
        }
        
        /// <remarks/>
        public void AddDebitTrxReceiptAsync(string userName, string password, string termNo, string debitTrxId, string url, object userState) {
            if ((this.AddDebitTrxReceiptOperationCompleted == null)) {
                this.AddDebitTrxReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDebitTrxReceiptOperationCompleted);
            }
            this.InvokeAsync("AddDebitTrxReceipt", new object[] {
                        userName,
                        password,
                        termNo,
                        debitTrxId,
                        url}, this.AddDebitTrxReceiptOperationCompleted, userState);
        }
        
        private void OnAddDebitTrxReceiptOperationCompleted(object arg) {
            if ((this.AddDebitTrxReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDebitTrxReceiptCompleted(this, new AddDebitTrxReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetCoPhonNo", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCoPhonNo(string userName, string password, string termNo, string creditCoCode) {
            object[] results = this.Invoke("GetCoPhonNo", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCoCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCoPhonNoAsync(string userName, string password, string termNo, string creditCoCode) {
            this.GetCoPhonNoAsync(userName, password, termNo, creditCoCode, null);
        }
        
        /// <remarks/>
        public void GetCoPhonNoAsync(string userName, string password, string termNo, string creditCoCode, object userState) {
            if ((this.GetCoPhonNoOperationCompleted == null)) {
                this.GetCoPhonNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCoPhonNoOperationCompleted);
            }
            this.InvokeAsync("GetCoPhonNo", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCoCode}, this.GetCoPhonNoOperationCompleted, userState);
        }
        
        private void OnGetCoPhonNoOperationCompleted(object arg) {
            if ((this.GetCoPhonNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCoPhonNoCompleted(this, new GetCoPhonNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ChkParmXExist", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkParmXExist(string userName, string password, string termNo, string parmX) {
            object[] results = this.Invoke("ChkParmXExist", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkParmXExistAsync(string userName, string password, string termNo, string parmX) {
            this.ChkParmXExistAsync(userName, password, termNo, parmX, null);
        }
        
        /// <remarks/>
        public void ChkParmXExistAsync(string userName, string password, string termNo, string parmX, object userState) {
            if ((this.ChkParmXExistOperationCompleted == null)) {
                this.ChkParmXExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkParmXExistOperationCompleted);
            }
            this.InvokeAsync("ChkParmXExist", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX}, this.ChkParmXExistOperationCompleted, userState);
        }
        
        private void OnChkParmXExistOperationCompleted(object arg) {
            if ((this.ChkParmXExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkParmXExistCompleted(this, new ChkParmXExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ChkGoodParmX", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkGoodParmX(string userName, string password, string termNo, string parmX) {
            object[] results = this.Invoke("ChkGoodParmX", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkGoodParmXAsync(string userName, string password, string termNo, string parmX) {
            this.ChkGoodParmXAsync(userName, password, termNo, parmX, null);
        }
        
        /// <remarks/>
        public void ChkGoodParmXAsync(string userName, string password, string termNo, string parmX, object userState) {
            if ((this.ChkGoodParmXOperationCompleted == null)) {
                this.ChkGoodParmXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkGoodParmXOperationCompleted);
            }
            this.InvokeAsync("ChkGoodParmX", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX}, this.ChkGoodParmXOperationCompleted, userState);
        }
        
        private void OnChkGoodParmXOperationCompleted(object arg) {
            if ((this.ChkGoodParmXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkGoodParmXCompleted(this, new ChkGoodParmXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/CreateInvoice", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateInvoice(
                    string userName, 
                    string password, 
                    string termNo, 
                    string debitTrxId, 
                    string InvoiceUserName, 
                    string InvoicePassword, 
                    string InvoiceEsekNum, 
                    string InviceClientNumber, 
                    string InvoiceTypeCode, 
                    string InvoiceClientName, 
                    string InvoiceClientAddress, 
                    string InvoiceClientCity, 
                    string InvoiceDocNikuyBamakorSum, 
                    string InvoiceDocDetail, 
                    string InvoiceMaamRate, 
                    string InvoiceEemailAddress, 
                    string InvoceProductsListFromWeb, 
                    string InvoicePrintLanguage) {
            object[] results = this.Invoke("CreateInvoice", new object[] {
                        userName,
                        password,
                        termNo,
                        debitTrxId,
                        InvoiceUserName,
                        InvoicePassword,
                        InvoiceEsekNum,
                        InviceClientNumber,
                        InvoiceTypeCode,
                        InvoiceClientName,
                        InvoiceClientAddress,
                        InvoiceClientCity,
                        InvoiceDocNikuyBamakorSum,
                        InvoiceDocDetail,
                        InvoiceMaamRate,
                        InvoiceEemailAddress,
                        InvoceProductsListFromWeb,
                        InvoicePrintLanguage});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateInvoiceAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string debitTrxId, 
                    string InvoiceUserName, 
                    string InvoicePassword, 
                    string InvoiceEsekNum, 
                    string InviceClientNumber, 
                    string InvoiceTypeCode, 
                    string InvoiceClientName, 
                    string InvoiceClientAddress, 
                    string InvoiceClientCity, 
                    string InvoiceDocNikuyBamakorSum, 
                    string InvoiceDocDetail, 
                    string InvoiceMaamRate, 
                    string InvoiceEemailAddress, 
                    string InvoceProductsListFromWeb, 
                    string InvoicePrintLanguage) {
            this.CreateInvoiceAsync(userName, password, termNo, debitTrxId, InvoiceUserName, InvoicePassword, InvoiceEsekNum, InviceClientNumber, InvoiceTypeCode, InvoiceClientName, InvoiceClientAddress, InvoiceClientCity, InvoiceDocNikuyBamakorSum, InvoiceDocDetail, InvoiceMaamRate, InvoiceEemailAddress, InvoceProductsListFromWeb, InvoicePrintLanguage, null);
        }
        
        /// <remarks/>
        public void CreateInvoiceAsync(
                    string userName, 
                    string password, 
                    string termNo, 
                    string debitTrxId, 
                    string InvoiceUserName, 
                    string InvoicePassword, 
                    string InvoiceEsekNum, 
                    string InviceClientNumber, 
                    string InvoiceTypeCode, 
                    string InvoiceClientName, 
                    string InvoiceClientAddress, 
                    string InvoiceClientCity, 
                    string InvoiceDocNikuyBamakorSum, 
                    string InvoiceDocDetail, 
                    string InvoiceMaamRate, 
                    string InvoiceEemailAddress, 
                    string InvoceProductsListFromWeb, 
                    string InvoicePrintLanguage, 
                    object userState) {
            if ((this.CreateInvoiceOperationCompleted == null)) {
                this.CreateInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateInvoiceOperationCompleted);
            }
            this.InvokeAsync("CreateInvoice", new object[] {
                        userName,
                        password,
                        termNo,
                        debitTrxId,
                        InvoiceUserName,
                        InvoicePassword,
                        InvoiceEsekNum,
                        InviceClientNumber,
                        InvoiceTypeCode,
                        InvoiceClientName,
                        InvoiceClientAddress,
                        InvoiceClientCity,
                        InvoiceDocNikuyBamakorSum,
                        InvoiceDocDetail,
                        InvoiceMaamRate,
                        InvoiceEemailAddress,
                        InvoceProductsListFromWeb,
                        InvoicePrintLanguage}, this.CreateInvoiceOperationCompleted, userState);
        }
        
        private void OnCreateInvoiceOperationCompleted(object arg) {
            if ((this.CreateInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateInvoiceCompleted(this, new CreateInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/ChkGoodParmX2", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChkGoodParmX2(string userName, string password, string termNo, string parmX, string recreateToken) {
            object[] results = this.Invoke("ChkGoodParmX2", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX,
                        recreateToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChkGoodParmX2Async(string userName, string password, string termNo, string parmX, string recreateToken) {
            this.ChkGoodParmX2Async(userName, password, termNo, parmX, recreateToken, null);
        }
        
        /// <remarks/>
        public void ChkGoodParmX2Async(string userName, string password, string termNo, string parmX, string recreateToken, object userState) {
            if ((this.ChkGoodParmX2OperationCompleted == null)) {
                this.ChkGoodParmX2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnChkGoodParmX2OperationCompleted);
            }
            this.InvokeAsync("ChkGoodParmX2", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX,
                        recreateToken}, this.ChkGoodParmX2OperationCompleted, userState);
        }
        
        private void OnChkGoodParmX2OperationCompleted(object arg) {
            if ((this.ChkGoodParmX2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChkGoodParmX2Completed(this, new ChkGoodParmX2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/CheckError", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckError(string userName, string password, string termNo, string code) {
            object[] results = this.Invoke("CheckError", new object[] {
                        userName,
                        password,
                        termNo,
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckErrorAsync(string userName, string password, string termNo, string code) {
            this.CheckErrorAsync(userName, password, termNo, code, null);
        }
        
        /// <remarks/>
        public void CheckErrorAsync(string userName, string password, string termNo, string code, object userState) {
            if ((this.CheckErrorOperationCompleted == null)) {
                this.CheckErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckErrorOperationCompleted);
            }
            this.InvokeAsync("CheckError", new object[] {
                        userName,
                        password,
                        termNo,
                        code}, this.CheckErrorOperationCompleted, userState);
        }
        
        private void OnCheckErrorOperationCompleted(object arg) {
            if ((this.CheckErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckErrorCompleted(this, new CheckErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetBroadcastNum", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBroadcastNum(string userName, string password, string termNo) {
            object[] results = this.Invoke("GetBroadcastNum", new object[] {
                        userName,
                        password,
                        termNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBroadcastNumAsync(string userName, string password, string termNo) {
            this.GetBroadcastNumAsync(userName, password, termNo, null);
        }
        
        /// <remarks/>
        public void GetBroadcastNumAsync(string userName, string password, string termNo, object userState) {
            if ((this.GetBroadcastNumOperationCompleted == null)) {
                this.GetBroadcastNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBroadcastNumOperationCompleted);
            }
            this.InvokeAsync("GetBroadcastNum", new object[] {
                        userName,
                        password,
                        termNo}, this.GetBroadcastNumOperationCompleted, userState);
        }
        
        private void OnGetBroadcastNumOperationCompleted(object arg) {
            if ((this.GetBroadcastNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBroadcastNumCompleted(this, new GetBroadcastNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/CheckCreditCard", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckCreditCard(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy) {
            object[] results = this.Invoke("CheckCreditCard", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCreditCardAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy) {
            this.CheckCreditCardAsync(userName, password, termNo, creditCard, creditCardDateMmyy, null);
        }
        
        /// <remarks/>
        public void CheckCreditCardAsync(string userName, string password, string termNo, string creditCard, string creditCardDateMmyy, object userState) {
            if ((this.CheckCreditCardOperationCompleted == null)) {
                this.CheckCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCreditCardOperationCompleted);
            }
            this.InvokeAsync("CheckCreditCard", new object[] {
                        userName,
                        password,
                        termNo,
                        creditCard,
                        creditCardDateMmyy}, this.CheckCreditCardOperationCompleted, userState);
        }
        
        private void OnCheckCreditCardOperationCompleted(object arg) {
            if ((this.CheckCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCreditCardCompleted(this, new CheckCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/TrxLookUp", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TrxLookUp(string userName, string password, string termNo, string parmX) {
            object[] results = this.Invoke("TrxLookUp", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TrxLookUpAsync(string userName, string password, string termNo, string parmX) {
            this.TrxLookUpAsync(userName, password, termNo, parmX, null);
        }
        
        /// <remarks/>
        public void TrxLookUpAsync(string userName, string password, string termNo, string parmX, object userState) {
            if ((this.TrxLookUpOperationCompleted == null)) {
                this.TrxLookUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTrxLookUpOperationCompleted);
            }
            this.InvokeAsync("TrxLookUp", new object[] {
                        userName,
                        password,
                        termNo,
                        parmX}, this.TrxLookUpOperationCompleted, userState);
        }
        
        private void OnTrxLookUpOperationCompleted(object arg) {
            if ((this.TrxLookUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TrxLookUpCompleted(this, new TrxLookUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/SystemInfo", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SystemInfo(string userName, string password) {
            object[] results = this.Invoke("SystemInfo", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SystemInfoAsync(string userName, string password) {
            this.SystemInfoAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void SystemInfoAsync(string userName, string password, object userState) {
            if ((this.SystemInfoOperationCompleted == null)) {
                this.SystemInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSystemInfoOperationCompleted);
            }
            this.InvokeAsync("SystemInfo", new object[] {
                        userName,
                        password}, this.SystemInfoOperationCompleted, userState);
        }
        
        private void OnSystemInfoOperationCompleted(object arg) {
            if ((this.SystemInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SystemInfoCompleted(this, new SystemInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetStatisRec", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStatisRec(string userName, string password, string termNo, string fileNumber, string currency) {
            object[] results = this.Invoke("GetStatisRec", new object[] {
                        userName,
                        password,
                        termNo,
                        fileNumber,
                        currency});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatisRecAsync(string userName, string password, string termNo, string fileNumber, string currency) {
            this.GetStatisRecAsync(userName, password, termNo, fileNumber, currency, null);
        }
        
        /// <remarks/>
        public void GetStatisRecAsync(string userName, string password, string termNo, string fileNumber, string currency, object userState) {
            if ((this.GetStatisRecOperationCompleted == null)) {
                this.GetStatisRecOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatisRecOperationCompleted);
            }
            this.InvokeAsync("GetStatisRec", new object[] {
                        userName,
                        password,
                        termNo,
                        fileNumber,
                        currency}, this.GetStatisRecOperationCompleted, userState);
        }
        
        private void OnGetStatisRecOperationCompleted(object arg) {
            if ((this.GetStatisRecCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatisRecCompleted(this, new GetStatisRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetCardName", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCardName(string oemString) {
            object[] results = this.Invoke("GetCardName", new object[] {
                        oemString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardNameAsync(string oemString) {
            this.GetCardNameAsync(oemString, null);
        }
        
        /// <remarks/>
        public void GetCardNameAsync(string oemString, object userState) {
            if ((this.GetCardNameOperationCompleted == null)) {
                this.GetCardNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardNameOperationCompleted);
            }
            this.InvokeAsync("GetCardName", new object[] {
                        oemString}, this.GetCardNameOperationCompleted, userState);
        }
        
        private void OnGetCardNameOperationCompleted(object arg) {
            if ((this.GetCardNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardNameCompleted(this, new GetCardNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetTransData", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransData(string userName, string password, string termNo, string startDate, string endDate, string type) {
            object[] results = this.Invoke("GetTransData", new object[] {
                        userName,
                        password,
                        termNo,
                        startDate,
                        endDate,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransDataAsync(string userName, string password, string termNo, string startDate, string endDate, string type) {
            this.GetTransDataAsync(userName, password, termNo, startDate, endDate, type, null);
        }
        
        /// <remarks/>
        public void GetTransDataAsync(string userName, string password, string termNo, string startDate, string endDate, string type, object userState) {
            if ((this.GetTransDataOperationCompleted == null)) {
                this.GetTransDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransDataOperationCompleted);
            }
            this.InvokeAsync("GetTransData", new object[] {
                        userName,
                        password,
                        termNo,
                        startDate,
                        endDate,
                        type}, this.GetTransDataOperationCompleted, userState);
        }
        
        private void OnGetTransDataOperationCompleted(object arg) {
            if ((this.GetTransDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransDataCompleted(this, new GetTransDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/GetTransDataE", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransDataE(string userName, string password, string termNo, string startDate, string endDate, string type) {
            object[] results = this.Invoke("GetTransDataE", new object[] {
                        userName,
                        password,
                        termNo,
                        startDate,
                        endDate,
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransDataEAsync(string userName, string password, string termNo, string startDate, string endDate, string type) {
            this.GetTransDataEAsync(userName, password, termNo, startDate, endDate, type, null);
        }
        
        /// <remarks/>
        public void GetTransDataEAsync(string userName, string password, string termNo, string startDate, string endDate, string type, object userState) {
            if ((this.GetTransDataEOperationCompleted == null)) {
                this.GetTransDataEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransDataEOperationCompleted);
            }
            this.InvokeAsync("GetTransDataE", new object[] {
                        userName,
                        password,
                        termNo,
                        startDate,
                        endDate,
                        type}, this.GetTransDataEOperationCompleted, userState);
        }
        
        private void OnGetTransDataEOperationCompleted(object arg) {
            if ((this.GetTransDataECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransDataECompleted(this, new GetTransDataECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/CheckAshVersion", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckAshVersion(string userName, string password, string termNo) {
            object[] results = this.Invoke("CheckAshVersion", new object[] {
                        userName,
                        password,
                        termNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckAshVersionAsync(string userName, string password, string termNo) {
            this.CheckAshVersionAsync(userName, password, termNo, null);
        }
        
        /// <remarks/>
        public void CheckAshVersionAsync(string userName, string password, string termNo, object userState) {
            if ((this.CheckAshVersionOperationCompleted == null)) {
                this.CheckAshVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckAshVersionOperationCompleted);
            }
            this.InvokeAsync("CheckAshVersion", new object[] {
                        userName,
                        password,
                        termNo}, this.CheckAshVersionOperationCompleted, userState);
        }
        
        private void OnCheckAshVersionOperationCompleted(object arg) {
            if ((this.CheckAshVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckAshVersionCompleted(this, new CheckAshVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/Broadcast", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Broadcast(string userName, string password, string termNo) {
            object[] results = this.Invoke("Broadcast", new object[] {
                        userName,
                        password,
                        termNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BroadcastAsync(string userName, string password, string termNo) {
            this.BroadcastAsync(userName, password, termNo, null);
        }
        
        /// <remarks/>
        public void BroadcastAsync(string userName, string password, string termNo, object userState) {
            if ((this.BroadcastOperationCompleted == null)) {
                this.BroadcastOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBroadcastOperationCompleted);
            }
            this.InvokeAsync("Broadcast", new object[] {
                        userName,
                        password,
                        termNo}, this.BroadcastOperationCompleted, userState);
        }
        
        private void OnBroadcastOperationCompleted(object arg) {
            if ((this.BroadcastCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BroadcastCompleted(this, new BroadcastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DelTran", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelTran(string userName, string password, string termNo, string shovar, string creditcard, string total) {
            object[] results = this.Invoke("DelTran", new object[] {
                        userName,
                        password,
                        termNo,
                        shovar,
                        creditcard,
                        total});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelTranAsync(string userName, string password, string termNo, string shovar, string creditcard, string total) {
            this.DelTranAsync(userName, password, termNo, shovar, creditcard, total, null);
        }
        
        /// <remarks/>
        public void DelTranAsync(string userName, string password, string termNo, string shovar, string creditcard, string total, object userState) {
            if ((this.DelTranOperationCompleted == null)) {
                this.DelTranOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTranOperationCompleted);
            }
            this.InvokeAsync("DelTran", new object[] {
                        userName,
                        password,
                        termNo,
                        shovar,
                        creditcard,
                        total}, this.DelTranOperationCompleted, userState);
        }
        
        private void OnDelTranOperationCompleted(object arg) {
            if ((this.DelTranCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTranCompleted(this, new DelTranCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DelTran2", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelTran2(string userName, string password, string termNo, string shovar, string creditcard, string total) {
            object[] results = this.Invoke("DelTran2", new object[] {
                        userName,
                        password,
                        termNo,
                        shovar,
                        creditcard,
                        total});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelTran2Async(string userName, string password, string termNo, string shovar, string creditcard, string total) {
            this.DelTran2Async(userName, password, termNo, shovar, creditcard, total, null);
        }
        
        /// <remarks/>
        public void DelTran2Async(string userName, string password, string termNo, string shovar, string creditcard, string total, object userState) {
            if ((this.DelTran2OperationCompleted == null)) {
                this.DelTran2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTran2OperationCompleted);
            }
            this.InvokeAsync("DelTran2", new object[] {
                        userName,
                        password,
                        termNo,
                        shovar,
                        creditcard,
                        total}, this.DelTran2OperationCompleted, userState);
        }
        
        private void OnDelTran2OperationCompleted(object arg) {
            if ((this.DelTran2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTran2Completed(this, new DelTran2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/DelTran3", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelTran3(string userName, string password, string termNo, string debitTrxId) {
            object[] results = this.Invoke("DelTran3", new object[] {
                        userName,
                        password,
                        termNo,
                        debitTrxId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelTran3Async(string userName, string password, string termNo, string debitTrxId) {
            this.DelTran3Async(userName, password, termNo, debitTrxId, null);
        }
        
        /// <remarks/>
        public void DelTran3Async(string userName, string password, string termNo, string debitTrxId, object userState) {
            if ((this.DelTran3OperationCompleted == null)) {
                this.DelTran3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelTran3OperationCompleted);
            }
            this.InvokeAsync("DelTran3", new object[] {
                        userName,
                        password,
                        termNo,
                        debitTrxId}, this.DelTran3OperationCompleted, userState);
        }
        
        private void OnDelTran3OperationCompleted(object arg) {
            if ((this.DelTran3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelTran3Completed(this, new DelTran3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/SendLastBroadcastData", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendLastBroadcastData(string userName, string password, string termNo, string emailAddress) {
            object[] results = this.Invoke("SendLastBroadcastData", new object[] {
                        userName,
                        password,
                        termNo,
                        emailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendLastBroadcastDataAsync(string userName, string password, string termNo, string emailAddress) {
            this.SendLastBroadcastDataAsync(userName, password, termNo, emailAddress, null);
        }
        
        /// <remarks/>
        public void SendLastBroadcastDataAsync(string userName, string password, string termNo, string emailAddress, object userState) {
            if ((this.SendLastBroadcastDataOperationCompleted == null)) {
                this.SendLastBroadcastDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLastBroadcastDataOperationCompleted);
            }
            this.InvokeAsync("SendLastBroadcastData", new object[] {
                        userName,
                        password,
                        termNo,
                        emailAddress}, this.SendLastBroadcastDataOperationCompleted, userState);
        }
        
        private void OnSendLastBroadcastDataOperationCompleted(object arg) {
            if ((this.SendLastBroadcastDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLastBroadcastDataCompleted(this, new SendLastBroadcastDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://ws101.pelecard.biz/SendBroadcastData", RequestNamespace="https://ws101.pelecard.biz/", ResponseNamespace="https://ws101.pelecard.biz/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendBroadcastData(string userName, string password, string termNo, string ricuzNumber, string emailAddress) {
            object[] results = this.Invoke("SendBroadcastData", new object[] {
                        userName,
                        password,
                        termNo,
                        ricuzNumber,
                        emailAddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendBroadcastDataAsync(string userName, string password, string termNo, string ricuzNumber, string emailAddress) {
            this.SendBroadcastDataAsync(userName, password, termNo, ricuzNumber, emailAddress, null);
        }
        
        /// <remarks/>
        public void SendBroadcastDataAsync(string userName, string password, string termNo, string ricuzNumber, string emailAddress, object userState) {
            if ((this.SendBroadcastDataOperationCompleted == null)) {
                this.SendBroadcastDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBroadcastDataOperationCompleted);
            }
            this.InvokeAsync("SendBroadcastData", new object[] {
                        userName,
                        password,
                        termNo,
                        ricuzNumber,
                        emailAddress}, this.SendBroadcastDataOperationCompleted, userState);
        }
        
        private void OnSendBroadcastDataOperationCompleted(object arg) {
            if ((this.SendBroadcastDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendBroadcastDataCompleted(this, new SendBroadcastDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ws101.pelecard.biz/")]
    public partial class OutputObject {
        
        private string statusCodeField;
        
        private string errorMessageField;
        
        private ResultData resultDataField;
        
        private TamalData tamalDataField;
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public ResultData ResultData {
            get {
                return this.resultDataField;
            }
            set {
                this.resultDataField = value;
            }
        }
        
        /// <remarks/>
        public TamalData TamalData {
            get {
                return this.tamalDataField;
            }
            set {
                this.tamalDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ws101.pelecard.biz/")]
    public partial class ResultData {
        
        private string pelecardTransactionIdField;
        
        private string tokenField;
        
        private string voucherIdField;
        
        private string shvaResultField;
        
        private string shvaFileNumberField;
        
        private string stationNumberField;
        
        private string recieptField;
        
        private string jParamField;
        
        private string creditCardNumberField;
        
        private string creditCardExpDateField;
        
        private string creditCardCompanyClearerField;
        
        private string creditCardCompanyIssuerField;
        
        private string creditCardStarsDiscountTotalField;
        
        private string creditTypeField;
        
        private string creditCardAbroadCardField;
        
        private string debitTypeField;
        
        private string debitCodeField;
        
        private string debitTotalField;
        
        private string debitApproveNumberField;
        
        private string debitCurrencyField;
        
        private string totalPaymentsField;
        
        private string firstPaymentTotalField;
        
        private string fixedPaymentTotalField;
        
        private string additionalDetailsParamXField;
        
        private string cardHebNameField;
        
        private string creditCardBrandField;
        
        private string createdDateField;
        
        private string broadcastNoField;
        
        private string broadcastDateField;
        
        private string fileNumberField;
        
        private string ricuzNumberField;
        
        private string terminalNumberField;
        
        private string expirationDateField;
        
        private string resultField;
        
        private string shvaOutputField;
        
        private string callReasonField;
        
        private string approvedByField;
        
        private string allowedField;
        
        private string tzField;
        
        private string uidField;
        
        private string panEntryModeField;
        
        private string eciField;
        
        private string xidField;
        
        private string cavvField;
        
        /// <remarks/>
        public string PelecardTransactionId {
            get {
                return this.pelecardTransactionIdField;
            }
            set {
                this.pelecardTransactionIdField = value;
            }
        }
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public string VoucherId {
            get {
                return this.voucherIdField;
            }
            set {
                this.voucherIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShvaResult {
            get {
                return this.shvaResultField;
            }
            set {
                this.shvaResultField = value;
            }
        }
        
        /// <remarks/>
        public string ShvaFileNumber {
            get {
                return this.shvaFileNumberField;
            }
            set {
                this.shvaFileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StationNumber {
            get {
                return this.stationNumberField;
            }
            set {
                this.stationNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Reciept {
            get {
                return this.recieptField;
            }
            set {
                this.recieptField = value;
            }
        }
        
        /// <remarks/>
        public string JParam {
            get {
                return this.jParamField;
            }
            set {
                this.jParamField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardNumber {
            get {
                return this.creditCardNumberField;
            }
            set {
                this.creditCardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardExpDate {
            get {
                return this.creditCardExpDateField;
            }
            set {
                this.creditCardExpDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardCompanyClearer {
            get {
                return this.creditCardCompanyClearerField;
            }
            set {
                this.creditCardCompanyClearerField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardCompanyIssuer {
            get {
                return this.creditCardCompanyIssuerField;
            }
            set {
                this.creditCardCompanyIssuerField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardStarsDiscountTotal {
            get {
                return this.creditCardStarsDiscountTotalField;
            }
            set {
                this.creditCardStarsDiscountTotalField = value;
            }
        }
        
        /// <remarks/>
        public string CreditType {
            get {
                return this.creditTypeField;
            }
            set {
                this.creditTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardAbroadCard {
            get {
                return this.creditCardAbroadCardField;
            }
            set {
                this.creditCardAbroadCardField = value;
            }
        }
        
        /// <remarks/>
        public string DebitType {
            get {
                return this.debitTypeField;
            }
            set {
                this.debitTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DebitCode {
            get {
                return this.debitCodeField;
            }
            set {
                this.debitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DebitTotal {
            get {
                return this.debitTotalField;
            }
            set {
                this.debitTotalField = value;
            }
        }
        
        /// <remarks/>
        public string DebitApproveNumber {
            get {
                return this.debitApproveNumberField;
            }
            set {
                this.debitApproveNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DebitCurrency {
            get {
                return this.debitCurrencyField;
            }
            set {
                this.debitCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public string TotalPayments {
            get {
                return this.totalPaymentsField;
            }
            set {
                this.totalPaymentsField = value;
            }
        }
        
        /// <remarks/>
        public string FirstPaymentTotal {
            get {
                return this.firstPaymentTotalField;
            }
            set {
                this.firstPaymentTotalField = value;
            }
        }
        
        /// <remarks/>
        public string FixedPaymentTotal {
            get {
                return this.fixedPaymentTotalField;
            }
            set {
                this.fixedPaymentTotalField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalDetailsParamX {
            get {
                return this.additionalDetailsParamXField;
            }
            set {
                this.additionalDetailsParamXField = value;
            }
        }
        
        /// <remarks/>
        public string CardHebName {
            get {
                return this.cardHebNameField;
            }
            set {
                this.cardHebNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCardBrand {
            get {
                return this.creditCardBrandField;
            }
            set {
                this.creditCardBrandField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
        
        /// <remarks/>
        public string BroadcastNo {
            get {
                return this.broadcastNoField;
            }
            set {
                this.broadcastNoField = value;
            }
        }
        
        /// <remarks/>
        public string BroadcastDate {
            get {
                return this.broadcastDateField;
            }
            set {
                this.broadcastDateField = value;
            }
        }
        
        /// <remarks/>
        public string FileNumber {
            get {
                return this.fileNumberField;
            }
            set {
                this.fileNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RicuzNumber {
            get {
                return this.ricuzNumberField;
            }
            set {
                this.ricuzNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TerminalNumber {
            get {
                return this.terminalNumberField;
            }
            set {
                this.terminalNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string shvaOutput {
            get {
                return this.shvaOutputField;
            }
            set {
                this.shvaOutputField = value;
            }
        }
        
        /// <remarks/>
        public string CallReason {
            get {
                return this.callReasonField;
            }
            set {
                this.callReasonField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovedBy {
            get {
                return this.approvedByField;
            }
            set {
                this.approvedByField = value;
            }
        }
        
        /// <remarks/>
        public string Allowed {
            get {
                return this.allowedField;
            }
            set {
                this.allowedField = value;
            }
        }
        
        /// <remarks/>
        public string Tz {
            get {
                return this.tzField;
            }
            set {
                this.tzField = value;
            }
        }
        
        /// <remarks/>
        public string Uid {
            get {
                return this.uidField;
            }
            set {
                this.uidField = value;
            }
        }
        
        /// <remarks/>
        public string PanEntryMode {
            get {
                return this.panEntryModeField;
            }
            set {
                this.panEntryModeField = value;
            }
        }
        
        /// <remarks/>
        public string eci {
            get {
                return this.eciField;
            }
            set {
                this.eciField = value;
            }
        }
        
        /// <remarks/>
        public string xid {
            get {
                return this.xidField;
            }
            set {
                this.xidField = value;
            }
        }
        
        /// <remarks/>
        public string cavv {
            get {
                return this.cavvField;
            }
            set {
                this.cavvField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://ws101.pelecard.biz/")]
    public partial class TamalData {
        
        private string invoiceStatusField;
        
        private string invoiceLinkField;
        
        private string invoiceNumberField;
        
        private string invoiceErrorField;
        
        private string rawResponseField;
        
        /// <remarks/>
        public string InvoiceStatus {
            get {
                return this.invoiceStatusField;
            }
            set {
                this.invoiceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceLink {
            get {
                return this.invoiceLinkField;
            }
            set {
                this.invoiceLinkField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceNumber {
            get {
                return this.invoiceNumberField;
            }
            set {
                this.invoiceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceError {
            get {
                return this.invoiceErrorField;
            }
            set {
                this.invoiceErrorField = value;
            }
        }
        
        /// <remarks/>
        public string RawResponse {
            get {
                return this.rawResponseField;
            }
            set {
                this.rawResponseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitRegularTypeCompletedEventHandler(object sender, DebitRegularTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitRegularTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitRegularTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitRegularTypeEmvCompletedEventHandler(object sender, DebitRegularTypeEmvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitRegularTypeEmvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitRegularTypeEmvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DRTCompletedEventHandler(object sender, DRTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DRTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DRTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitPaymntsTypeCompletedEventHandler(object sender, DebitPaymntsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitPaymntsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitPaymntsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitPaymntsTypeEmvCompletedEventHandler(object sender, DebitPaymntsTypeEmvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitPaymntsTypeEmvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitPaymntsTypeEmvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DPTCompletedEventHandler(object sender, DPTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DPTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DPTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitCreditTypeCompletedEventHandler(object sender, DebitCreditTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitCreditTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitCreditTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitCreditTypeEmvCompletedEventHandler(object sender, DebitCreditTypeEmvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitCreditTypeEmvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitCreditTypeEmvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DCTCompletedEventHandler(object sender, DCTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DCTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DCTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DebitIsracreditTypeCompletedEventHandler(object sender, DebitIsracreditTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebitIsracreditTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebitIsracreditTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthrizeCreditCardCompletedEventHandler(object sender, AuthrizeCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthrizeCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthrizeCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthrizeCreditCardEmvCompletedEventHandler(object sender, AuthrizeCreditCardEmvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthrizeCreditCardEmvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthrizeCreditCardEmvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ShvIntr99CompletedEventHandler(object sender, ShvIntr99CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShvIntr99CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShvIntr99CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ShvIntr99TCompletedEventHandler(object sender, ShvIntr99TCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShvIntr99TCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShvIntr99TCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SI99CompletedEventHandler(object sender, SI99CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SI99CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SI99CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConvertToTokenCompletedEventHandler(object sender, ConvertToTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConvertToCcCompletedEventHandler(object sender, ConvertToCcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertToCcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertToCcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateTokenCompletedEventHandler(object sender, UpdateTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetSapakNoCompletedEventHandler(object sender, GetSapakNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSapakNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSapakNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRetNumCompletedEventHandler(object sender, GetRetNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRetNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRetNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetRetNameCompletedEventHandler(object sender, GetRetNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRetNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRetNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthrizeCreditTypeCompletedEventHandler(object sender, AuthrizeCreditTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthrizeCreditTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthrizeCreditTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthrizeCreditTypeEmvCompletedEventHandler(object sender, AuthrizeCreditTypeEmvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthrizeCreditTypeEmvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthrizeCreditTypeEmvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthrizePaymntsTypeCompletedEventHandler(object sender, AuthrizePaymntsTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthrizePaymntsTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthrizePaymntsTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthrizePaymntsTypeEmvCompletedEventHandler(object sender, AuthrizePaymntsTypeEmvCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthrizePaymntsTypeEmvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthrizePaymntsTypeEmvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OutputObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OutputObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DelIshurCompletedEventHandler(object sender, DelIshurCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelIshurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelIshurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuditPayPalPaymentCompletedEventHandler(object sender, AuditPayPalPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditPayPalPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditPayPalPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RetrieveTokenCompletedEventHandler(object sender, RetrieveTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddDebitTrxReceiptCompletedEventHandler(object sender, AddDebitTrxReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDebitTrxReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDebitTrxReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCoPhonNoCompletedEventHandler(object sender, GetCoPhonNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCoPhonNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCoPhonNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChkParmXExistCompletedEventHandler(object sender, ChkParmXExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkParmXExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkParmXExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChkGoodParmXCompletedEventHandler(object sender, ChkGoodParmXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkGoodParmXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkGoodParmXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CreateInvoiceCompletedEventHandler(object sender, CreateInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChkGoodParmX2CompletedEventHandler(object sender, ChkGoodParmX2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChkGoodParmX2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChkGoodParmX2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckErrorCompletedEventHandler(object sender, CheckErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetBroadcastNumCompletedEventHandler(object sender, GetBroadcastNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBroadcastNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBroadcastNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckCreditCardCompletedEventHandler(object sender, CheckCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void TrxLookUpCompletedEventHandler(object sender, TrxLookUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TrxLookUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TrxLookUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SystemInfoCompletedEventHandler(object sender, SystemInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SystemInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SystemInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetStatisRecCompletedEventHandler(object sender, GetStatisRecCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatisRecCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatisRecCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCardNameCompletedEventHandler(object sender, GetCardNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTransDataCompletedEventHandler(object sender, GetTransDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetTransDataECompletedEventHandler(object sender, GetTransDataECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransDataECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransDataECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckAshVersionCompletedEventHandler(object sender, CheckAshVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckAshVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckAshVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void BroadcastCompletedEventHandler(object sender, BroadcastCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BroadcastCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BroadcastCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DelTranCompletedEventHandler(object sender, DelTranCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTranCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTranCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DelTran2CompletedEventHandler(object sender, DelTran2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTran2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTran2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DelTran3CompletedEventHandler(object sender, DelTran3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelTran3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelTran3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendLastBroadcastDataCompletedEventHandler(object sender, SendLastBroadcastDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLastBroadcastDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLastBroadcastDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendBroadcastDataCompletedEventHandler(object sender, SendBroadcastDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendBroadcastDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendBroadcastDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591